# collection of bash profile things for all my environments

# homebrew
eval "$(/opt/homebrew/bin/brew shellenv)"

## git aliases


alias gs="git status"
alias ga="git add"
alias gas="git add src/*"

alias gcom="git commit -m"
alias gcoa="git commit --amend"

alias gch="git checkout"
alias gchm="git checkout main"

alias gpl="git pull"

alias gph="git push -u origin"

alias gpf="git push --force-with-lease"
alias gp="git push"

alias gpr="gh pr create -d"
alias gpv="gh pr view --web"

alias gkillmaster="git fetch origin && git reset --hard origin/master"
alias gkillmain="git fetch origin && git reset --hard origin/main"
gkill() {
  if [ -z "$1" ]; then
    echo "Branch name required"
    return 1
  fi
  git fetch origin
  git checkout "$1"
  git reset --hard origin/"$1"
}

# git branch in prompt.
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
# --- Prompt configuration for zsh ---
# Show current directory plus the git branch (in green).
setopt PROMPT_SUBST
autoload -U colors && colors
PROMPT='%~ %{$fg[green]%}$(parse_git_branch)%{$reset_color%} $ '

# bash aliases
alias la="ls -a"
alias ll="ls -la"
alias reload="source ~/.zshrc"

# loads my developer environmental variables. always located at ~/.dev_env
# contains api keys and such, to be loaded into projects
. ~/.dev_env

# example of that file
# export SENDGRID_USERNAME=foo
# export SENDGRID_PASSWORD=bar

## scripts

# quickly make an update commit but with argument support for the comment
qph() {
  commit_comment=${1:-'update'} 
  echo '-- adding files --'
  ga .
  echo "-- commiting files with comment: $commit_comment --"
  gcom "$commit_comment"
  echo '-- pushing files --'
  git push
  echo '-- done --'
}

# auto call nvm use
_nvmrc_hook() {
  if [[ $PWD == $PREV_PWD ]]; then
    return
  fi
  
  PREV_PWD=$PWD
  [[ -f ".nvmrc" ]] && nvm use
}

# Auto-run _nvmrc_hook on directory change and before each prompt (zsh only)
autoload -U add-zsh-hook
add-zsh-hook chpwd _nvmrc_hook
add-zsh-hook precmd _nvmrc_hook

alias mcp-inspect="npx @modelcontextprotocol/inspector"
alias nu='nvm use'
alias nr="npm run"

# --- Zsh completion & inline suggestions ---
autoload -Uz compinit && compinit

# Make the standard Tab completion widget (expand-or-complete) also accept an
# inline autosuggestion before falling back to normal completion.
# (binding set inside autosuggestions block below)

# zsh-autosuggestions: inline gray suggestion after cursor
if [[ -f "$(brew --prefix 2>/dev/null)/share/zsh-autosuggestions/zsh-autosuggestions.zsh" ]]; then
  source "$(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
  # Show suggestions in a subtle gray
  ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8'
  
  # Bind Tab to accept suggestions (Ctrl+X Ctrl+F for file completion when needed)
  bindkey '^I' autosuggest-accept
fi

# --- Up/Down arrow history substring search (fish-style) ---
autoload -Uz history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
for map in emacs viins; do
  bindkey -M $map '^[[A' history-beginning-search-backward-end  # Up
  bindkey -M $map '^[[B' history-beginning-search-forward-end  # Down
done