# ============================================================================
# ZSH Configuration - All Environments
# Collection of shell configuration for all my environments
# ============================================================================

# ----------------------------------------------------------------------------
# Package Managers & Environment Setup
# ----------------------------------------------------------------------------

# Homebrew
eval "$(/opt/homebrew/bin/brew shellenv)"

# Load developer environment variables (API keys, etc.)
# Always located at ~/.dev_env
. ~/.dev_env

# Example contents of ~/.dev_env:
# export SENDGRID_USERNAME=foo
# export SENDGRID_PASSWORD=bar

# ----------------------------------------------------------------------------
# Shell Appearance & Prompt
# ----------------------------------------------------------------------------

# Git branch helper function for prompt
parse_git_branch() {
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# Prompt configuration for zsh
# Show current directory plus the git branch (in green)
setopt PROMPT_SUBST
autoload -U colors && colors
PROMPT='%~ %{$fg[green]%}$(parse_git_branch)%{$reset_color%} $ '

# ----------------------------------------------------------------------------
# Git Aliases & Functions
# ----------------------------------------------------------------------------

# Basic git operations
alias gs="git status"
alias ga="git add"
alias gas="git add src/*"

# Commit operations
alias gcom="git commit -m"
alias gcoa="git commit --amend"

# Branch operations
alias gch="git checkout"
alias gchm="git checkout main"

# Remote operations
alias gpl="git pull"
alias gph="git push -u origin"
alias gpf="git push --force-with-lease"
alias gp="git push"

# GitHub CLI integration
alias gpr="gh pr create -d"
alias gpv="gh pr view --web"

# Branch reset helpers
alias gkillmaster="git fetch origin && git reset --hard origin/master"
alias gkillmain="git fetch origin && git reset --hard origin/main"

# Reset any branch to origin
gkill() {
  if [ -z "$1" ]; then
    echo "Branch name required"
    return 1
  fi
  git fetch origin
  git checkout "$1"
  git reset --hard origin/"$1"
}

# ----------------------------------------------------------------------------
# General Aliases
# ----------------------------------------------------------------------------

# Directory listing
alias la="ls -a"
alias ll="ls -la"

# Shell management
alias reload="source ~/.zshrc"

# Development tools
alias mcp-inspect="npx @modelcontextprotocol/inspector"
alias nu='nvm use'
alias nr="npm run"

# ----------------------------------------------------------------------------
# Custom Scripts & Functions
# ----------------------------------------------------------------------------

# Quick commit and push with optional message
qph() {
  commit_comment=${1:-'update'} 
  echo '-- adding files --'
  ga .
  echo "-- commiting files with comment: $commit_comment --"
  gcom "$commit_comment"
  echo '-- pushing files --'
  git push
  echo '-- done --'
}

# Auto-switch Node version when entering directories with .nvmrc
_nvmrc_hook() {
  if [[ $PWD == $PREV_PWD ]]; then
    return
  fi
  
  PREV_PWD=$PWD
  [[ -f ".nvmrc" ]] && nvm use
}

# Register the nvm hook for zsh
autoload -U add-zsh-hook
add-zsh-hook chpwd _nvmrc_hook
add-zsh-hook precmd _nvmrc_hook

# ----------------------------------------------------------------------------
# Zsh Completion & Autosuggestions
# ----------------------------------------------------------------------------

# Enable zsh completion system
autoload -Uz compinit && compinit

# zsh-autosuggestions: inline gray suggestion after cursor
if [[ -f "$(brew --prefix 2>/dev/null)/share/zsh-autosuggestions/zsh-autosuggestions.zsh" ]]; then
  source "$(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh"
  
  # Show suggestions in a subtle gray
  ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8'
  
  # Key bindings:
  # Tab: accept autosuggestion
  # Shift+Tab: normal completion (files, commands, etc.)
  bindkey '^I' autosuggest-accept           # Tab
  bindkey '^[[Z' expand-or-complete         # Shift+Tab
fi

# ----------------------------------------------------------------------------
# History Search & Navigation
# ----------------------------------------------------------------------------

# Up/Down arrow history substring search (fish-style)
# Type a few chars, then Up/Down to cycle through matching commands
autoload -Uz history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end

for map in emacs viins; do
  bindkey -M $map '^[[A' history-beginning-search-backward-end  # Up arrow
  bindkey -M $map '^[[B' history-beginning-search-forward-end  # Down arrow
done